/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/v1/sign_up": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ユーザー作成 */
        post: operations["signUpJson"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/v1/sign_in": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ログイン */
        post: operations["signInJson"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/i": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 現在ログインしているユーザーの取得 */
        get: operations["getI"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/.well-known/jwks.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * JWKsエンドポイント
         * @description RFC7517
         */
        get: operations["jwks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description ユーザーの詳細な情報
         *     ログインしているユーザー自身の情報 */
        UserDetail: {
            username: string;
            /** Format: uuid */
            userId: string;
            /** Format: date-time */
            createdAt: string;
        };
        ProblemDetail: {
            /** Format: uri */
            type?: string;
            title?: string;
            /** Format: int32 */
            status?: number;
            detail?: string;
            /** Format: uri */
            instance?: string;
            properties?: {
                [key: string]: Record<string, never>;
            };
        };
        SignUpDto: {
            username: string;
            password: string;
        };
        Token: {
            token: string;
        };
        SignInDto: {
            username: string;
            password: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    signUpJson: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description 作成するユーザーオブジェクト */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignUpDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDetail"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetail"];
                };
            };
        };
    };
    signInJson: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description ログインするユーザーオブジェクト */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignInDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetail"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetail"];
                };
            };
        };
    };
    getI: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDetail"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    /** @description 401となった原因 */
                    "WWW-Authenticate"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetail"];
                };
            };
        };
    };
    jwks: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Json Web Key Setを返します */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "keys": [
                     *         {
                     *           "kty": "RSA",
                     *           "e": "AQAB",
                     *           "kid": "nEpO3EdePSSOWX-2zjpizXBWtmcY2yB4-XbVGJJK8Oo",
                     *           "n": "9DfhZ92pIYxtxfWKpRuWAB1ybQbhfHhFgXtHsxVkmWMCyL5sa5RXsEXxiwmGQsCVN5pHAP2t0-GgeURgDOR1ugVdQwbQGX0qrFPSDtTe3BcdOFIGnbUtikDcVUj_PcgW3QWISNzZzSy_c6JayEIswhvNUReTiz3r5UFpKQ2N2CCCcflknFSU-_qX9MvSbge0zjjnqNd41KIBafdvlWD0LZS9LHbPA5rp1BfhX01NGPGs5NP8DczzEwYc-011SIULcMA7sU2B4DoxqGHDyprddhWM0PkeuSg3l1RUbtx1NEgS2WmJDt9snrrL6PQfftLo9hsHNhEMQbvLDUwYnX7Tow"
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
}
